
extern const WeaponFrameInfo WEAPON_INFO[];


//void Dread_BlitWeapon(__d0 word plane)
//{
//	static byte anim;
//	static byte frame;
//	if( plane==0 )
//	{
//		// Animation logic
//		if( view_weapon_frame )
//		{
//			mouse_click = 0;
//			if( weapintnum>=WEAPON_INFO[view_weapon_frame].delay && WEAPON_INFO[view_weapon_frame+1].data )
//			{
//				weapintnum -= WEAPON_INFO[view_weapon_frame].delay;
//				view_weapon_frame++;
//			}
//			view_weapon_swing = 0;
//		}
//		else if( mouse_click || !(CIAA_PRA & (1<<6)) )
//		{
//			mouse_click = 0;
//		
//			if( view_weapon_frame == 0 )
//			{
//				view_weapon_frame++;
//				weapintnum = 0;
//				view_weapon_reload = 0;
//				view_weapon_swing = 0;
//			}
//		}
//
//		anim = (byte)view_weapon_swing;
//		frame = (byte)view_weapon_frame;
//	}
//
//	const WeaponFrameInfo *weap = WEAPON_INFO + frame;
//
//	byte *ptr_base = (byte*)((dword)BlockAddr_Work << 16);
//	word ox = weap->off_x + (sincos_fix14[(anim+64)&0xFF]>>12);				// cos(x+1/8)		x=32
//	word oy = weap->off_y + 16 + 4 + (sincos_fix14[(byte)((anim<<1)+64)]>>12);		// cos(2x)			x=32	x=96	x=160	x=224
//	word w = (weap->width+7)>>3;
//	if(ox&7) w++;
//
//	BLTCON0 = BLIT2D_CON0[ox&7];
//	BLTCON1 = BLIT2D_CON0[ox&7] & 0xF000;
//	BLTAFWM = 0xFFFF;
//	BLTALWM = BLIT2D_ALWM[ox&7];
//	BLTAMOD = ox&7 ? -2 : 0;
//	BLTBMOD = ox&7 ? -2 : 0;
//	BLTCMOD = 42*2 - (w<<1);
//	BLTDMOD = 42*2 - (w<<1);
//	BLTAPT = weap->data;
//	BLTBPT = (byte*)weap->data + (weap->plane_stride*(plane+1));
//
//	//	screen_A0:	equ	2
//	//	screen_A1 : equ	2+8400
//	//	screen_A2 : equ	2+8400*2
//	//	screen_A3 : equ	2+8400*3
//	ptr_base += 2 + 8400*plane + (42*2)*oy + ((ox>>2)&~1);
//	BLTCPT = ptr_base;
//	BLTDPT = ptr_base;
//
//	word h = weap->height;
//	if( h+oy > 100 )
//		h = 100 - oy;
//
//	BLTSIZE = COMPUTE_BLTSIZE(w, h);
//}
